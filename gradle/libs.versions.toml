[versions]
ahocorasickVersion="0.6.3"
androidGifDrawableVersion="1.2.23"
androidsvgAarVersion="1.4"
appcompatVersion="1.6.1"
bcprovJdk15onVersion="1.70"
coil="3.0.0-alpha06"
coreKtxVersion="1.13.0"
exoplayerVersion="2.19.1"
firebaseCrashlyticsGradleVersion="2.9.9"
fragmentKtxVersion="1.6.2"
glideVersion="4.16.0"
googleServicesVersion="4.4.1"
gradle= "8.3.2"
accompanistDrawablepainterVersion = "0.34.0"
cameraCoreVersion = "1.4.0-alpha04"
apollo = "3.2.1"
compose = "1.6.7"
activityComposeVersion = "1.9.0"
composeBom = "2024.04.01"
coreSplashscreenVersion = "1.0.1"
coreVersion = "3.5.3"
datastorePreferencesVersion = "1.0.0"
firebaseCrashlyticsKtxVersion = "18.6.3"
firebaseBomVersion = "32.8.0"
gsonVersion="2.10.1"
guavaVersion="33.0.0-jre"
jsoupVersion="1.15.3"
kgraphql = "0.19.0"
kotlinGradlePluginVersion="1.9.23"
kotlinxDatetimeVersion="0.4.0"
kotlinxSerializationJsonVersion="1.6.3"
kotlinxCoroutinesGuavaVersion="1.8.0"
kotlinxCoroutinesAndroidVersion="1.8.0"
kotlinxCoroutinesCoreVersion="1.8.0"
ktor = "3.0.0-beta-1"
leakcanaryAndroidVersion = "2.12"
lifecycleExtensionsVersion="2.2.0"
lifecycleViewmodelKtxVersion="2.8.0"
markwon="4.6.2"
materialVersion="1.12.0"
media3 = "1.3.1"
navigationComposeVersion = "2.7.7"
materialIconsExtendedVersion = "1.7.0-alpha05"
material3Version = "1.2.1"
okhttpVersion="4.12.0"
openaiClientVersion = "3.6.2"
pdfiumAndroidVersion="1.9.0"
preferenceKtxVersion = "1.2.1"
refreshLayoutKernelVersion="2.0.5"
room = "2.6.1"
snakeYamlVersion = "v1.18-android"
subsamplingScaleImageViewAndroidxVersion="3.10.0"
transitionVersion="1.5.0"
viewpager2Version = "1.0.0"
workRuntimeKtxVersion = "2.9.0"
ztZipVersion = "1.16"
devtoolsKspVersion = "1.9.23-1.0.20"
pagingVersion = "3.3.0"

[libraries]
ahocorasick = { module = "org.ahocorasick:ahocorasick", version.ref = "ahocorasickVersion" }
android-gif-drawable = { module = "pl.droidsonroids.gif:android-gif-drawable", version.ref = "androidGifDrawableVersion" }
androidsvg-aar = { module = "com.caverock:androidsvg-aar", version.ref = "androidsvgAarVersion" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompatVersion" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtxVersion" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentKtxVersion" }
androidx-lifecycle-extensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "lifecycleExtensionsVersion" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleViewmodelKtxVersion" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleViewmodelKtxVersion" }
bcpkix-jdk15on = { module = "org.bouncycastle:bcpkix-jdk15on", version.ref = "bcprovJdk15onVersion" }
bcprov-jdk15on = { module = "org.bouncycastle:bcprov-jdk15on", version.ref = "bcprovJdk15onVersion" }
exoplayer = { module = "com.google.android.exoplayer:exoplayer", version.ref = "exoplayerVersion" }

# Coil
coil = { module = "io.coil-kt.coil3:coil", version.ref = "coil" }
coil-video = { module = "io.coil-kt.coil3:coil-video", version.ref = "coil" }
coil-gif = { module = "io.coil-kt.coil3:coil-gif", version.ref = "coil" }
coil-svg = { module = "io.coil-kt.coil3:coil-svg", version.ref = "coil" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor", version.ref = "coil" }

androidx-transition = { module = "androidx.transition:transition", version.ref = "transitionVersion" }
firebase-crashlytics-gradle = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "firebaseCrashlyticsGradleVersion" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glideVersion" }
google-services = { module = "com.google.gms:google-services", version.ref = "googleServicesVersion" }
gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
accompanist-drawablepainter = { module = "com.google.accompanist:accompanist-drawablepainter", version.ref = "accompanistDrawablepainterVersion" }

androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreenVersion" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferencesVersion" }

# camera
camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "cameraCoreVersion" }
camera-core = { module = "androidx.camera:camera-core", version.ref = "cameraCoreVersion" }
camera-view = { module = "androidx.camera:camera-view", version.ref = "cameraCoreVersion" }
camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "cameraCoreVersion" }

# media3
media3-cast = { module = "androidx.media3:media3-cast", version.ref = "media3" }
media3-datasource = { module = "androidx.media3:media3-datasource", version.ref = "media3" }
media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }
media3-session = { module = "androidx.media3:media3-session", version.ref = "media3" }
media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3" }
media3-dash = { module = "androidx.media3:media3-exoplayer-dash", version.ref = "media3" }
media3-hls = { module = "androidx.media3:media3-exoplayer-hls", version.ref = "media3" }

paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "pagingVersion" }
zxing-core = { module = "com.google.zxing:core", version.ref = "coreVersion" }


androidx-preference-ktx = { module = "androidx.preference:preference-ktx", version.ref = "preferenceKtxVersion" }
androidx-viewpager2 = { module = "androidx.viewpager2:viewpager2", version.ref = "viewpager2Version" }
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workRuntimeKtxVersion" }

# compose
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "navigationComposeVersion" }
compose-lifecycle-runtime = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "lifecycleViewmodelKtxVersion" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "activityComposeVersion" }
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
compose-foundation-layout = { module = "androidx.compose.foundation:foundation-layout", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "materialIconsExtendedVersion" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "material3Version" }

# firebase
firebase-crashlytics-ktx = { module = "com.google.firebase:firebase-crashlytics-ktx", version.ref = "firebaseCrashlyticsKtxVersion" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBomVersion" }

gson = { module = "com.google.code.gson:gson", version.ref = "gsonVersion" }
guava = { module = "com.google.guava:guava", version.ref = "guavaVersion" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoupVersion" }

# graphql
kgraphql-ktor = { module = "com.apurebase:kgraphql-ktor", version.ref = "kgraphql" }
kgraphql = { module = "com.apurebase:kgraphql", version.ref = "kgraphql" }

# apollo
apollo-adapters = { module = "com.apollographql.apollo3:apollo-adapters", version.ref = "apollo" }
apollo-normalized-cache-sqlite = { module = "com.apollographql.apollo3:apollo-normalized-cache-sqlite", version.ref = "apollo" }
apollo-normalized-cache = { module = "com.apollographql.apollo3:apollo-normalized-cache", version.ref = "apollo" }
apollo-runtime = { module = "com.apollographql.apollo3:apollo-runtime", version.ref = "apollo" }

# kotlin
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinGradlePluginVersion" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetimeVersion" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJsonVersion" }
kotlinx-coroutines-guava = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-guava", version.ref = "kotlinxCoroutinesGuavaVersion" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroidVersion" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCoreVersion" }
ksp = { module = "com.github.bumptech.glide:ksp", version.ref = "glideVersion" }

# ktor client
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }

# ktor server
ktor-network-tls-certificates = { module = "io.ktor:ktor-network-tls-certificates", version.ref = "ktor" }
ktor-server-auto-head-response = { module = "io.ktor:ktor-server-auto-head-response", version.ref = "ktor" }
ktor-server-caching-headers = { module = "io.ktor:ktor-server-caching-headers", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor" }
ktor-server-conditional-headers = { module = "io.ktor:ktor-server-conditional-headers", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-partial-content = { module = "io.ktor:ktor-server-partial-content", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-forwarded-header = { module = "io.ktor:ktor-server-forwarded-header", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }

# markdown
markwon-core = { module = "io.noties.markwon:core", version.ref = "markwon" }
markwon-html = { module = "io.noties.markwon:html", version.ref = "markwon" }
markwon-latex = { module = "io.noties.markwon:ext-latex", version.ref = "markwon" }
markwon-strikethrough = { module = "io.noties.markwon:ext-strikethrough", version.ref = "markwon" }
markwon-tables = { module = "io.noties.markwon:ext-tables", version.ref = "markwon" }
markwon-linkify = { module = "io.noties.markwon:linkify", version.ref = "markwon" }
markwon-tasklist = { module = "io.noties.markwon:ext-tasklist", version.ref = "markwon" }

# material
material = { module = "com.google.android.material:material", version.ref = "materialVersion" }

# room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttpVersion" }
openai-client = { module = "com.aallam.openai:openai-client", version.ref = "openaiClientVersion" }
leakcanary-android = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanaryAndroidVersion" }
pdfium-android = { module = "com.github.barteksc:pdfium-android", version.ref = "pdfiumAndroidVersion" }
refresh-layout-kernel = { module = "io.github.scwang90:refresh-layout-kernel", version.ref = "refreshLayoutKernelVersion" }

snake-yaml = { module = "com.github.bmoliveira:snake-yaml", version.ref = "snakeYamlVersion" }
subsampling-scale-image-view-androidx = { module = "com.davemorrissey.labs:subsampling-scale-image-view-androidx", version.ref = "subsamplingScaleImageViewAndroidxVersion" }
zt-zip = { module = "org.zeroturnaround:zt-zip", version.ref = "ztZipVersion" }

[plugins]
devtools-ksp = { id = "com.google.devtools.ksp", version.ref = "devtoolsKspVersion" }
